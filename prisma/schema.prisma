// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id          Int      @id @default(autoincrement())
  description String
  district    String
  province    String
  country     String
  post_code   String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  user        User[]
}

model User {
  id           String    @id @default(uuid())
  name         String
  gender       Gender
  birth_date   DateTime  @db.Date
  phone_number String    @unique
  email        String    @unique
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  address_id   Int
  address      Address   @relation(fields: [address_id], references: [id])
  account      Account[]
}

model Account {
  id             String        @id @default(uuid())
  user_id        String
  account_number String
  balance        Decimal
  account_status AccountStatus
  created_at     DateTime      @default(now())
  updated_at     DateTime      @updatedAt
  user           User          @relation(fields: [user_id], references: [id])
  transaction    transaction[] @relation("sourceAccount")
  received       transaction[] @relation("destinationAccount")
}

model transaction_type {
  id          String        @id
  description String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  transaction transaction[]
}

model transaction {
  id                     String            @id @default(uuid())
  source_account_id      String
  destination_account_id String
  transaction_type_id    String
  amount                 Decimal
  note                   String
  transaction_status     TransactionStatus
  transaction_date       DateTime          @default(now())
  sourceAccount          Account           @relation("sourceAccount", fields: [source_account_id], references: [id])
  destinationAccount     Account           @relation("destinationAccount", fields: [destination_account_id], references: [id])
  transaction_type       transaction_type  @relation(fields: [transaction_type_id], references: [id])
}

enum Gender {
  Male
  Female
}

enum AccountStatus {
  Active
  Inactive
}

enum TransactionStatus {
  Success
  Failure
  Pending
}
